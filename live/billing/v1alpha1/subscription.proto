// Copyright 2020 Drud Technologies.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddev.billing.v1alpha1;

import "live/billing/v1alpha1/workspace.proto";
import "live/billing/v1alpha1/subscriptionitem.proto";

option go_package = "github.com/drud/billing-api/gen/live/billing/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "SubscriptionProto";
option java_package = "com.ddev.live.billing.v1alpha1";


enum State {
  READY = 0;

  NOTREADY = 1;

  UNKOWN = 2;
} 

message Subscription {

    // Full path to the Instance resource in the API. - `OutputOnly`
    string name = 1;

    // Relative name of the instance within the version. - `OutputOnly`
    string id = 2;

    // The workspace the subscription belongs to. - `OutputOnly`
    Workspace workspace = 3;

    // The UNIX timestamp for the billing period start. - `OutputOnly`
    int64 CurrentPeriodStart = 4;

    // The UNIX timestamp for the billing period end. - `OutputOnly`
    int64 CurrentPeriodEnd = 5;

    // If the subscription is currently active - `OutputOnly`
    bool Active = 6;

    // The subscription items this subscription shall contain. - `OutputOnly`
    repeated SubscriptionItem items = 7;

    // Indicators about the state of the subscription internally to the platform. - `OutputOnly`
    State state = 16;
}

//
// Message Types
//


message CreateSubscriptionRequest {

  // The identifier of the customer to subscribe. `Required`
  string CustomerID = 2;

  // A list of up to 20 subscription items, each with an attached plan. `Required`
  repeated SubscriptionItem items = 3;

  // The workspace which this subscription belongs. `Required`
  Workspace workspace = 4;

  // Boolean indicating whether this subscription should cancel at the end of the current period. `Optional`
  bool cancel_at_period_end = 17;
  
  // ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. If not set, invoices will use the default payment method in the customer’s invoice settings. `Optional`
  // string default_payment_method = 18
  
  // Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata. `Optional`
  map<string, string> metadata = 19;

  // Unix timestamp representing the end of the trial period the customer will get before being charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. If set, trial_end will override the default trial period of the plan the customer is being subscribed to. The special value now can be provided to end the customer’s trial immediately. Can be at most two years from billing_cycle_anchor. `Optional`
  int64 trial_end = 20;

  // Integer representing the number of trial period days before the customer is charged for the first time. This will always overwrite any trials that might apply via a subscribed plan. `Optional`
  int32 trial_period_days = 21;

  // ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If not set, defaults to the customer’s default source. `Optional`
  string default_source = 22;
}

//
message CreateSubscriptionResponse {
  // The subscription created. - `Required`
  Subscription subscription = 1;
}

//
message GetSubscriptionRequest {
  // The name of the subscription. - `Required`
  string name = 1;
  
  // The workspace of the subscription. - `Required`
  Workspace workspace = 2;
}

//
message GetSubscriptionResponse {
  // The subscription matching this name - `OutputOnly`
  Subscription subscription = 1;
}

// Request message for `Billing.ListSubscriptions`.
message ListSubscriptionRequest {
  // The workspace under which to list all subscriptions - `Required`
  Workspace workspace = 1;
}

// Response message for `Billing.ListSubscriptions`.
message ListSubscriptionResponse {

  // The subscriptions belonging to the customer account. - `OutputOnly`
  repeated Subscription subscriptions = 1;
}


message UpdateSubscriptionRequest {

  // The name of the subscription. `Required`
  string name = 1;

  // The workspace which this subscription belongs. `Required`
  Workspace workspace = 2;

  // Boolean indicating whether this subscription should cancel at the end of the current period. `Optional`
  bool cancel_at_period_end = 17;
  
  // ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. If not set, invoices will use the default payment method in the customer’s invoice settings. `Optional`
  string default_payment_method = 18;
  
  // List of subscription items, each with an attached plan. `Optional`
  repeated SubscriptionItem items = 19;
  
  // Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata. `Optional`
  map<string, string> metadata = 20;
  
}

message UpdateSubscriptionResponse {
  // The subscription updated. `OutputOnly`
  Subscription subscription = 1;
}

message CancelSubscriptionRequest {
  // The name of the subscription to cancel. `Required`
  string name = 1;

  // Will generate a final invoice that invoices for any un-invoiced metered usage and new/pending proration invoice items.
  bool invoice_now = 17;
  
  // Will generate a proration invoice item that credits remaining unused time until the subscription period end.
  bool prorate = 18;
  
}

message CancelSubscriptionResponse {
  // The cancelled subscription. `OutputOnly`
  Subscription subscription = 1;
}

message DeleteSubscriptionRequest {
  // The name of the subscription to delete. `Required`
  string name = 1;
}

message DeleteSubscriptionResponse {
  // The subscription deleted. `OutputOnly`
  Subscription subscription = 1;
}
