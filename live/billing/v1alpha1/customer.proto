// Copyright 2020 Drud Technologies.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddev.billing.v1alpha1;

option go_package = "github.com/drud/billing-api/gen/live/billing/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "CustomerProto";
option java_package = "com.ddev.live.billing.v1alpha1";

// A customer on ddev-live
message Customer {
    
    // `OutputOnly` - The ID of the customer.
    string id = 1; 

    // `OutputOnly` - The name of the customer.
    string name = 2;

    // `OutputOnly` - A description for this customer.
    string description = 3;

    // `OutputOnly` - The primary email address for this customer.
    string email = 4;

    // `OutputOnly` - Address associated with thiis customer.
    Address address = 5;

    // `OutputOnly` - Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    map<string, string> metadata = 6;

    // `OutputOnly` - The customer’s phone number.
    string phone = 7;

    // `OutputOnly` - The default payment source.
    string defaultSource = 9;

}

message Address {
    // `Required` - Address line 1 (e.g., street, PO Box, or company name).
    string line1 = 1; 

    // `Optional` - City, district, suburb, town, or village.
    string City = 17;

    // `Optional` - Two-letter country code (ISO 3166-1 alpha-2).
    string country = 18;

    // `Optional` - Address line 2 (e.g., apartment, suite, unit, or building).
    string line2 = 19;

    // `Optional` - ZIP or postal code.
    string postal_code = 20;

    // `Optional` - State, county, province, or region.
    string state = 21;
}

message Source {
    // `Required` - Unique identifier for the object.
    string token = 1;
}

// Message Types

message CreateCustomerRequest {

    // `Optional` - The customer’s address.
    Address address = 17;

    // `Optional` - An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
    string description = 18;

    // `Optional` - Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
    string email = 19;

    // `Optional` - Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata.
    map<string, string> metadata = 20;

    // `Optional` - The customer’s full name or business name.
    string name = 21;

    // `Optional` - The ID of the PaymentMethod to attach to the customer.
    string payment_method = 22;

    // `Optional` - The customer’s phone number.
    string phone = 23;

    // `Optional` - The customer’s payment sources, if any. This is only a reference to existing sources.  Will not trigger the creation of a source.
    Source source = 24;
}

message CreateCustomerResponse {

    // `OutputOnly` - The customer created.
    Customer customer = 1;
}
  
//
message GetCustomerRequest {

    // `Required` - The id of the customr to retrieve.
    string id = 1;
}

//
message GetCustomerResponse {

    // `OutputOnly` - The customer with the provided ID.
    Customer customer = 1;
}

// Request message for `Billing.ListCustomers`.
message ListCustomerRequest {
}

// Response message for `Billing.ListCustomers`.
message ListCustomerResponse {

    // `OutputOnly` - The list of available Customers.
    repeated Customer Customers = 1;
}

//
message UpdateCustomerRequest {

    // `Required` - The ID of the customer to update
    string id = 1;

    // `Optional` - The customer’s address.
    Address address = 17;

    // `Optional` - An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.
    string description = 18;

    // `Optional` - Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching and tracking. This may be up to 512 characters.
    string email = 19;

    // `Optional` - Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata.
    map<string, string> metadata = 20;

    // `Optional` - The customer’s full name or business name.
    string name = 21;

    // `Optional` - The customer’s phone number.
    string phone = 22;

    // `Optional` - The default payment source.
    string defaultSource = 9;
}

message UpdateCustomerResponse {
    // `OutputOnly` - The updated customer.
    Customer customer = 1;
}

message DeleteCustomerRequest {

    // `Required` - The id of the customer to delete.
    string id = 1;
}

message DeleteCustomerResponse {
    // `OutputOnly` - The deleted customer.
    Customer customer = 1;
}
