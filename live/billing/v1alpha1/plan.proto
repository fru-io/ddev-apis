// Copyright 2020 Drud Technologies.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddev.billing.v1alpha1;

import "live/billing/v1alpha1/common.proto";

option go_package = "github.com/drud/billing-api/gen/live/billing/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "PlanProto";
option java_package = "com.ddev.live.billing.v1alpha1";

message Plan {

    // Whether the plan can be used for new purchases. - `OutputOnly`
    string id = 1;

    // Whether the plan can be used for new purchases. - `OutputOnly`
    bool active = 2;

    // positive integer or zero. - `OutputOnly`
    int64 amount = 3;

    // Three-letter ISO currency code, in lowercase. Must be a supported currency. - `OutputOnly`
    string currency = 4;

    // The frequency at which a subscription is billed. One of day, week, month or year. - `OutputOnly`
    string interval = 5;

    // Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. - `OutputOnly`
    map<string, string>  metadata = 6;

    // A brief description of the plan, hidden from customers - `OutputOnly`
    string nickname = 7;

    // The Product whose pricing this plan determines. - `OutputOnly`
    string product = 8;

}

// Message Types

message CreatePlanRequest {

    // A positive integer in cents (or 0 for a free plan) representing how much to charge on a recurring basis. `Required for PER_UNIT plans only`
    uint32 amount = 1;

    // The currency for this plan. `Required`
    Currency currency = 2;

    // The billing period frequency. `Required`
    Interval interval = 3;

    // The product whose pricing the created plan will represent. This can either be the ID of an existing product, or a dictionary containing fields used to create a service product. `Required`
    string product = 4;
    
    // A unique name for this plan. `Required`
    string name = 5;

    // Whether the plan is currently available for new subscriptions. Defaults to true. `Optional`
    bool active = 17;

    // Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata. `Optional`
    map<string, string> metadata = 18;

    // A brief description of the plan, hidden from customers. `Optional`
    string nickname = 19;

}

message CreatePlanResponse {
    // The plan created. - `OutputOnly`
    Plan plan = 1;
}
  
//
message GetPlanRequest {
    // The name of the plan. `Required`
    string name = 1;
}

//
message GetPlanResponse {
    // The plan. `OutputOnly`
    Plan plan = 1;
}

// Request message for `Billing.ListPlans`.
message ListPlanRequest {
}

// Response message for `Billing.ListPlans`.
message ListPlanResponse {
    // The list of available plans. `OutputOnly`
    repeated Plan plans = 1;
}

//
message UpdatePlanRequest {
    // The name of the plan. `Required`
    string name = 1; 

    // Whether the plan is currently available for new subscriptions. `Optional`
    bool active = 17;

    // Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to metadata. `Optional`
    map<string, string> metadata = 18;

    // A brief description of the plan, hidden from customers. `Optional`
    string nickname = 19;

    // The product the plan belongs to. Note that after updating, statement descriptors and line items of the plan in active subscriptions will be affected. `Optional`
    string product = 20;

}

message UpdatePlanResponse {
    // The updated plan. `OutputOnly`
    Plan plan = 1;
}

message DeletePlanRequest {
    // The name of the plan to delete. `Required`
    string name = 1;
}

message DeletePlanResponse {
    // The plan deleted. `OutputOnly`
    Plan plan = 1;
}
