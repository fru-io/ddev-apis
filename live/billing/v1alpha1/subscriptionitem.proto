// Copyright 2020 Drud Technologies.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddev.billing.v1alpha1;

import "live/billing/v1alpha1/common.proto";

option go_package = "github.com/drud/billing-api/gen/live/billing/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "SubscriptionItemProto";
option java_package = "com.ddev.live.billing.v1alpha1";

message SubscriptionItem {

    // `Required` -Unique identifier for the object.
    string id = 1;

    // `Required` -The subscription this subscription_item belongs to.
    string subscription = 2;
    
    // `Optional` -Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    map<string, string> metadata = 17;

    // `Optional` - Hash describing the plan the customer is subscribed to.
    string plan = 18;
    
    // `Optional` - The price the customer is subscribed to.
    Price price = 19;
    
    // `Optional` - The quantity of the plan to which the customer should be subscribed.
    uint32 quantity = 20;
    
}

enum PriceType {
    RECURRING = 0;
    ONE_TIME = 1;
}

message Price {
    // Unique identifier for the object.
    string id = 1;

    // `Optional` - Whether the price can be used for new purchases.
    bool active = 17;

    // `Optional` - The ISO Currency.
    Currency currency = 18; 

    // `Optional` - Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
    map<string, string> metadata = 19;

    // `Optional` - A brief description of the plan, hidden from customers.
    string nickname = 20;

    // `Optional` - The ID of the product this price is associated with.
    string product = 21;

    //  `Optional` - The recurring components of a price such as interval and usage_type.
    Recurring recurring = 22;

    // `Optional` - One of one_time or recurring depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.
    PriceType type = 23;

    // `Optional` - The unit amount in cents to be charged, represented as a whole integer if possible.
    int64 amount = 24;
}