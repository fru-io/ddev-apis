// Copyright 2020 Drud Technologies.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddev.sites.v1alpha1;

option go_package = "github.com/drud/site-api/gen/live/sites/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.ddev.live.sites.v1alpha1";


enum SiteType {
    DRUPAL = 0;
    TYPO3 = 1;
    WORDPRESS = 2;
}


// Cron manages if and when the CMS cron executes
message Cron {

  /*
  `Optional`
  Disabled will stop the CMS cron from executing.  Default true.
  */
  bool disabled = 1;
 
  /*
  Schedule specifies when this process will execute using CronTab notation.
  */
  string schedule = 2;
}

/*
A site of SiteType.DRUPAL
*/
message DrupalSite {

  /*
  `OutputOnly`
  The name of the site
  */
  string workspace = 1;

  /*
  `OutputOnly`
  The name of the site
  */
  string name = 2;

  /*
  `OutputOnly`
  Github repository to target in the <org>/<name> format
  */
  string githubRepo = 3;

  /*
  `OutputOnly`
  */
  string branch = 17;
  
  /*
  `OutputOnly`
  */
  string version = 18;

  /*
  `OutputOnly`
  */
  bool composerInstall = 19;

  /*
  `OutputOnly`
  */
  string composerArgs = 20;

  /*
  `OutputOnly`
  */
  Cron cron = 21;

  /*
  `OutputOnly`
  */
  string DocRoot = 22;

}

/*
A site of SiteType.WORDPRESS
*/
message WordpressSite {
  /*
  `OutputOnly`
  The name of the site
  */
  string name = 1;
}

/*
A site of SiteType.TYPO3
*/
message Typo3Site {
  /*
  `OutputOnly`
  The name of the site
  */
  string name = 1;
}

message Site {

  // because you cannot use repeated oneof we must wrap oneof in a repeatable message

  oneof properties {
    DrupalSite drupal = 3;
    Typo3Site typo3 = 4;
    WordpressSite wordpress = 5;
  }
}

//
// Message Types
//

/*
*/
message CreateDrupalSiteRequest {

  /*
  `Required`
  The name of the site
  */
  string workspace = 1;

  /*
  `Required`
  The name of the site
  */
  string name = 2;

  /*
  `Required`
  Github repository to target in the <org>/<name> format
  */
  string githubRepo = 3;

  /*
  `Optional`
  */
  string branch = 17;
  
  /*
  `Optional`
  */
  string version = 18;

  /*
  `Optional`
  */
  bool composerInstall = 19;

  /*
  `Optional`
  */
  string composerArgs = 20;

  /*
  `Optional`
  */
  Cron cron = 21;

  /*
  `Optional`
  */
  string DocRoot = 22;
}

/*
*/
message CreateDrupalSiteResponse {

  /*
  `OutputOnly`
  The properties of the site which was created.
  */
  DrupalSite site = 1;
}

/*
*/
message GetSiteRequest {

  /*
  `Required`
  The workspace in which the site is contained
  */
  string workspace = 1;

  /*
  `Required`
  The name of the site
  */
  string name = 2;
}

/*
*/
message GetSiteResponse {

  /*
  `OutputOnly`
  The requested site.
  */
  Site sites = 1;
}

/*
*/
message ListSiteRequest {

  /*
  `Required`
  The workspace in which to list sites
  */
  string workspace = 1;
}

/*
*/
message ListSiteResponse {

  /*
  `OutputOnly`
  A list of sites.
  */
  repeated Site sites = 1;
}

/*
*/
message UpdateSiteRequest {

  /*
  */
}

/*
*/
message UpdateSiteResponse {

  /*
  */
}

/*
*/
message DeleteDrupalSiteRequest {

  /*
  `Required`
  The name of the site
  */
  string workspace = 1;

  /*
  `Required`
  The name of the site
  */
  string name = 2;
}

/*
*/
message DeleteDrupalSiteResponse {

  /*
  `OutputOnly`
  The name of the site
  */
  DrupalSite site = 1;
}

/*
*/
message SiteLogsRequest {

  /*
  */
}

/*
*/
message SiteLogsResponse {

  /*
  */
}

/*
*/
message SiteExecRequest {

  /*
  */
}

/*
TODO:
*/
message SiteExecResponse {

  /*
  */
}