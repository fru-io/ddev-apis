// Copyright 2020 Drud Technologies.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddev.sites.v1alpha1;

option go_package = "github.com/drud/site-api/gen/live/sites/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.ddev.live.sites.v1alpha1";


message FileBackupMetadata {
  
  /*
  The name of the backup
  */
  string name = 1;

  /*
  The database this backup references
  */
  string databaseReference = 2;

  /*
  The unix timestamp in which this backup was taken
  */
  int64 created = 3;
}

message File {

  /*
  The relative path, including the filename.
  */
  string path = 1;

  /*
  The content of the file expressed in bytes.
  */
  bytes content = 2;

  /*
  CRC32c checksum of the data, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order.  If provided a checksum mismatch on the receiving end will result in an error.
  */
  string CRC32c = 17;

  /*
  MD5 hash of the data; encoded using base64. If provided a checksum mismatch on the receiving end will result in an error.
  */
  string MD5 = 18;
}

/*
TODO
*/
message FileBackup {

  FileBackupMetadata metadata = 1;

  repeated File files = 2;
}

//
// Message Types
//

/*
*/
message BackupFilesRequest {

  /*
  `Required`
  The name of the site.
  */
  string site = 1;
}

/*
*/
message BackupFilesResponse {
}

/*
*/
message RestoreFilesRequest {

  /*
  `Required`
  The name of the site to restore files to.
  */
  string site = 1;

}

/*
*/
message RestoreFilesResponse {
}

/*
*/
message PushFilesRequest {

  /*
  `Required`
  The name of the site to stage files for
  */
  string site = 1;

  /*
  `Required`
  The file to stage for the site
  */
  File file = 2;

  /*
  `Optional`
  Destination directory for the files.  If specified all files will be relative to this location.
  */
  string directory = 17;
}

/*
*/
message PushFilesResponse {

  /*
  `Optional`
  The name of the asset created for this backup
  */
  string name = 1;
  
}

/*
*/
message PullFilesRequest {

  /*
  `Required`
  The name of the site to pull files from.
  */
  string site = 1;

  /*
  `Required`
  The path to the files or directories to pull
  */
  repeated string paths = 2;
}

/*
*/
message PullFilesResponse {

  /*
  `OutputOnly`
  The staged files for the requested backup
  */
  File file = 1;
}

message DescribeFilesRequest {

  /*
  `Required`
  The name of the site to describe files for.
  */
  string site = 1;

  /*
  `Optional`
  A list of paths or directories to describe.
  */
  repeated string paths = 17;
}

message DescribeFilesResponse {

  /*
  `OutputOnly`
  The metadata for files matching the request with content omitted.
  */
  repeated File metadata = 1;
}

/*
*/
message PushFilesStreamRequest {

  /*
  `Required`
  The name of the site to stage files for
  */
  string site = 1;

  /*
  `Required`
  The files to stage for the site
  */
  File files = 2;

  /*
  `Optional`
  Destination directory for the files.  If specified all files will be relative to this location.
  */
  string directory = 17;
}

/*
*/
message PushFilesStreamResponse {

  /*
  `Optional`
  The name of the asset created for this backup
  */
  string name = 1;
}

/*
*/
message PullFilesStreamRequest {

  /*
  `Required`
  The name of the site to pull files from.
  */
  string site = 1;

  /*
  `Required`
  The path to the files or directories to pull
  */
  string paths = 2;
}

/*
*/
message PullFilesStreamResponse {

  /*
  `OutputOnly`
  A file for the requested backup asset
  */
  File file = 1;
}


/*
*/
message ListFileBackupsRequest {

  /*
  `Required`
  The name of the site
  */
  string site = 1;
}

/*
*/
message ListFileBackupsResponse {
  
  /*
  `OutputOnly`
  The metadata for all backup objects.
  */
  repeated FileBackupMetadata metadata = 1;
}