// Copyright 2020 Drud Technologies.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ddev.sites.v1alpha1;

option go_package = "github.com/drud/site-api/gen/live/sites/v1alpha1";
option java_multiple_files = true;
option java_outer_classname = "ServiceProto";
option java_package = "com.ddev.live.sites.v1alpha1";


/*
TODO
*/
message File {

  /*
  The name of the file.
  */
  string name = 1;

  /*
  The content of the file expressed in bytes.
  */
  bytes content = 2;

  /*
  CRC32c checksum of the data, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order.  If provided a checksum mismatch on the receiving end will result in an error.
  */
  string CRC32c = 17;

  /*
  MD5 hash of the data; encoded using base64. If provided a checksum mismatch on the receiving end will result in an error.
  */
  string MD5 = 18;

}


//
// Message Types
//

/*
*/
message BackupFilesRequest {

  /*
  `Required`
  The name of the backup.
  */
  string name = 1;
}

/*
*/
message BackupFilesResponse {
}

/*
*/
message RestoreFilesRequest {

  /*
  `Required`
  The name of the backup to restore files from.
  */
  string name = 1;
}

/*
*/
message RestoreFilesResponse {
}

/*
*/
message PushFilesRequest {

  /*
  `Required`
  The name of the site to stage files for
  */
  string name = 1;

  /*
  `Required`
  The files to stage for the site
  */
  repeated File files = 2;

  /*
  `Optional`
  Destination directory for the files
  */
  string directory = 19;
}

/*
*/
message PushFilesResponse {
}

/*
*/
message PullFilesRequest {

  /*
  `Required`
  The name of the database to push to.
  */
  string name = 1;
}

/*
*/
message PullFilesResponse {

  /*
  `OutputOnly`
  The staged files for the requested site
  */
  repeated File files = 1;
}
